name: Build and test
on: 
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build'
        type: string
        required: true
      upload:
        description: 'Upload to NuGet'
        type: boolean
        required: false
        default: false
      commitChanges:
        description: 'Commit changed files (versions, build size, etc.)'
        type: boolean
        required: false
        default: false
      major:
        description: 'Major version number'
        type: number
        required: true
      minor:
        description: 'Minor version number'
        type: number
        required: true
      patch:
        description: 'Patch version number'
        type: number
        required: true
      pre:
        description: 'Prerelease version number'
        type: number
        required: false
        default: 0
      preName:
        description: 'Prerelease name'
        type: string
        required: false
        default: 'preview'
  workflow_call:
    inputs:
      branch:
        description: 'Branch to build'
        type: string
        required: true
      upload:
        description: 'Upload to NuGet'
        type: boolean
        required: false
        default: false
      commitChanges:
        description: 'Commit changed files (versions, build size, etc.)'
        type: boolean
        required: false
        default: false
      major:
        description: 'Major version number'
        type: string
        required: true
      minor:
        description: 'Minor version number'
        type: string
        required: true
      patch:
        description: 'Patch version number'
        type: string
        required: true
      pre:
        description: 'Prerelease version number'
        type: string
        required: false
        default: '0'
      preName:
        description: 'Prerelease name'
        type: string
        required: false
        default: 'preview'
    secrets:
      NUGET_KEY:
        required: true

permissions:
  contents: write
  actions: write

env:
  CARGO_TERM_COLOR: always

jobs:

  build-windows:
    runs-on: windows-latest
    env:
      CPM_SOURCE_CACHE: .deps_cache

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
        ref: ${{ inputs.branch }}

    - uses: lukka/get-cmake@v3.26.3

    - name: Get Cache
      uses: actions/cache@v4
      with:
        key: DependencyCache
        path: |
          .deps_cache

    - name: Build event-loop
      run: cargo build --verbose --features event-loop --example main_pc
    - name: Run tests event-loop
      run: cargo test --verbose --features event-loop
    
    - name: Build no-event-loop
      run: cargo build --verbose --features no-event-loop --example manual
    - name: Run tests no-event-loop
      run: cargo test --verbose --features no-event-loop

  build-linux:
    runs-on: ubuntu-latest
    env:
      CPM_SOURCE_CACHE: .deps_cache
    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
        ref: ${{ inputs.branch }}

    - name: Get Cache
      uses: actions/cache@v4
      with:
        key: DependencyCache
        path: |
          .deps_cache

    - name: Install Prerequisites
      run: |
        sudo apt-get update
        sudo apt-get install clang cmake lld ninja-build libx11-dev libxfixes-dev libegl-dev libgbm-dev libfontconfig-dev

    - name: Build event-loop
      run: cargo build --verbose --features event-loop --example main_pc
    - name: Run tests event-loop
      run: cargo test --verbose --features event-loop

    - name: Build no-event-loop
      run: cargo build --verbose --features no-event-loop --example manual
    - name: Run tests no-event-loop
      run: cargo test --verbose --features no-event-loop
