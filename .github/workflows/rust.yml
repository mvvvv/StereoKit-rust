name: Build and test
on: 
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build'
        type: string
        required: false
      commitChanges:
        description: 'Commit changed files (versions, build size, etc.)'
        type: boolean
        required: false
        default: false

  workflow_call:
    inputs:
      branch:
        description: 'Branch to build'
        type: string
        required: false

      commitChanges:
        description: 'Commit changed files (versions, build size, etc.)'
        type: boolean
        required: false
        default: false


permissions:
  contents: write
  actions: write

env:
  CARGO_TERM_COLOR: always
  CARGO_TERM_VERBOSE: true
  RUST_BACKTRACE: 1

jobs:

  build-windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
        ref: ${{ inputs.branch }}

    - uses: lukka/get-cmake@v3.26.3

    - name: Get Cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Build event-loop
      run: cargo build --verbose --features event-loop --example main_pc
    - name: Run tests event-loop
      run: cargo test --verbose --features event-loop

  build-linux:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
        ref: ${{ inputs.branch }}

    - name: Get Cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Install Prerequisites
      run: |
        sudo apt-get update
        sudo apt-get install xvfb clang cmake lld ninja-build libx11-dev libxfixes-dev libegl-dev libgbm-dev libfontconfig-dev

    - name: run X for winit
      run: |
        export DISPLAY=:99
        Xvfb -ac :99 -screen 0 1280x1024x16 > /dev/null 2>&1 &

    - name: Build event-loop
      run: cargo build --verbose --features event-loop --example main_pc
    - name: Run tests event-loop
      run: cargo test --verbose --features event-loop

    - name: Build no-event-loop
      run: cargo build --verbose --features no-event-loop --example manual
    - name: Run tests no-event-loop
      run: cargo test --verbose --features no-event-loop


